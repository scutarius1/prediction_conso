import streamlit as st
import streamlit.components.v1 as components
import io
import pandas as pd
import matplotlib.pyplot as plt
#import Explo_Viz 
from utils import Explo_Viz
import gdown

# #########################
# ‚öôÔ∏è LOAD & PREPROCESS ‚öôÔ∏è #
##########################

#@st.cache_data  
#def load_and_preprocess_data():
    #"""Charge et pr√©traite les donn√©es une seule fois."""
    #df_cons = pd.read_csv("../DataSet/eco2mix-regional-cons-def.csv", sep=';')
    #df_cons_preprocessed = Explo_Viz.preprocess_data(df_cons)
    #return df_cons_preprocessed

@st.cache_data
def load_and_preprocess_data():
    """T√©l√©charge et pr√©traite les donn√©es depuis Google Drive."""
    file_id = "1-rrbscoN6mfdR2fF_GnIlTVTIwPcWJZf"  # Ton ID de fichier extrait
    #1PNmdPjruNoA7o-YBE8nJi5IkgicIGcAJ
    url = f"https://drive.google.com/uc?id={file_id}"  # Lien de t√©l√©chargement direct
    output = "eco2mix-regional_reduced.csv"
    gdown.download(url, output, quiet=False)
    df_cons = pd.read_csv(output, sep=',', on_bad_lines="skip", encoding="utf-8",low_memory=False)
    
    # Appliquer le pr√©traitement
    df_cons_preprocessed = Explo_Viz.preprocess_data(df_cons)
    df_energie = Explo_Viz.preprocess_data2(df_cons_preprocessed)
    df_temp = Explo_Viz.load_temp()  # Charger les donn√©es de temp√©rature
    return df_cons_preprocessed, df_energie, df_temp #ajout de df_energie

def main():
    #st.title("Pr√©diction de Consommation Electrique en France")
    st.sidebar.title("Pr√©diction Conso Electrique en France")
    pages = ["Contexte et Datasets", "Production VS Consommation", "Variabilit√© de la consommation", "Mod√©lisation"]
    page = st.sidebar.radio("Aller vers", pages)
    #st.sidebar.title("Mod√©lisation")
    #st.sidebar.page_link("pages/modelisation.py", label="Processing et Mod√©lisation")
    st.sidebar.title("Simulateur")
    st.sidebar.page_link("pages/simulateur.py", label="üìä Pr√©diction R√©gionnale Conso Future")
    #df_cons_preprocessed = load_and_preprocess_data()  # Charger les donn√©es pr√©trait√©es
    df_cons_preprocessed, df_energie, df_temp = load_and_preprocess_data() # AJOUTE
    #df_temp = Explo_Viz.load_temp()  # Charger les donn√©es de temp√©rature
    #df_energie = Explo_Viz.preprocess_data2(df_cons_preprocessed)# Appliquer le pr√©traitement avanc√©


#################################
# ‚öôÔ∏è CONTEXTE ET DATASETS     ‚öôÔ∏è#
#################################
    if page == pages[0]: 
        st.header("Contexte")
        st.write(""" Contexte : L‚Äôad√©quation entre la production et la consommation d‚Äô√©lectricit√© est au c≈ìur des pr√©occupations d‚Äôun acteur de l‚Äô√©nergie comme EDF. 
                 EDF, en tant que producteur et commercialisateur d‚Äô√©lectricit√© est en effet un responsable d‚Äô√©quilibre vis-√†-vis de RTE. 
                 Cela signifie qu‚Äôil se doit d‚Äôassurer √† tout instant un √©quilibre entre sa production et la consommation de ses clients, sous peine de p√©nalit√©s. 
                 Pour se faire, construire un mod√®le de pr√©vision de la consommation de ses clients est une activit√© essentielle au bon fonctionnement de EDF.""") 
        st.write('Objectif : Constater le phasage entre la consommation et la production √©nerg√©tique au niveau national et au niveau r√©gional. ' \
            'Analyse au niveau r√©gional pour en d√©duire une pr√©vision de consommation au niveau national et au niveau r√©gional (risque de black out notamment)')
        
        st.write("## Les jeux de donn√©es mis en oeuvre")
        data = [
        {"Objet": "Energie", "Description": "Production et consommation d‚Äô√©nergie par type de moyen de production et r√©gions ( 30 min)", "P√©riode couverte": "2013-2022", "Volum√©trie (lignes x colonnes)": "2.121.408 x 32", "Source": "ODRE, Open Data EDF"},
        {"Objet": "Energie Temps R√©el", "Description": "Production et consommation d‚Äô√©nergie par type de moyen de production et r√©gion (15 min, non consolid√©)", "P√©riode couverte": "2023-2024", "Volum√©trie (lignes x colonnes)": "796.000 x 32", "Source": "ODRE"},
        {"Objet": "Population", "Description": "√âvolutions et pr√©visions de la population fran√ßaise par r√©gion", "P√©riode couverte": "1990-2070", "Volum√©trie (lignes x colonnes)": "264.951 x 7", "Source": "INSEE"},
        {"Objet": "Temp√©rature", "Description": "√âvolution des temp√©ratures quotidiennes par r√©gion", "P√©riode couverte": "2016-2024", "Volum√©trie (lignes x colonnes)": "41.756 x 7", "Source": "M√©t√©o France"},
        {"Objet": "Temp√©rature", "Description": "Simulations 'DRIAS-2020' : donn√©es corrig√©es quotidiennes. Grille Safran", "P√©riode couverte": "2006-2100", "Volum√©trie (lignes x colonnes)": "83.987.046 x 8", "Source": "DRIAS"},
        ]
        st.table(data)
    
        st.write("### Exploration 'Eco2Mix' - DataSet Principal")
        st.write(""" Le data set principal est structur√© de la sorte(.sample .describe .info)""") 

        st.dataframe(df_cons_preprocessed.sample(20))  # Utiliser le dataframe pr√©trait√©
        st.dataframe(df_cons_preprocessed.describe())
        # Capturer et afficher df_cons_preprocessed.info() directement avec st.text
        buffer = io.StringIO()
        df_cons_preprocessed.info(buf=buffer)
        s = buffer.getvalue()
        st.text(s)

        st.markdown("[Cliquez ici pour en savoir plus sur les actions de datacleaning](https://www.notion.so/Projet-Data-ENERGIE-PRE-PROCESSING-Fusion-Eco2mix-2-fichiers-18c725f38aa58062b1d7f79dc035f834?pvs=4)")
        
#################################
# ‚öôÔ∏è DATAVIZ ADEQUATION PROD/CONSO    ‚öôÔ∏è#
#################################

    elif page == pages[1]:
        st.header("In√©galit√©s R√©gionales dans le Mix Energ√©tique "
        )

        st.write ("""En plus de ne pas avoir le m√™me mix energ√©tique, les r√©gions sont dans une situation de disparit√© de leurs capacit√©s de production pour couvrir leurs besoins.
                  (cf. infra.)""")

#Affichage des taux de couverture/r√©gions

        fig2 = Explo_Viz.create_barplot(df_cons_preprocessed)
        fig2.text(0.5, -0.15, "Certaines r√©gions sont largement d√©ficitaires en terme de phasage entre leur production et leurs besoin. Cf. Couverture 100%", ha='center', va='top', fontsize=12)
        st.pyplot(fig2)
        plt.close(fig2)
        st.write("");st.write("") 

#Affichage des besoins /r√©gions dans le temps    

        st.header("Phasage consommation et Echanges Inter-r√©gionnaux"
        )

        st.write("");st.write("") 

        st.write(""" Pour r√©soudre cela avec l'aides des op√©rateurs d'√©nergie, les r√©gions proc√®dent toute l'ann√©e √† des *√©changes*.
                Le graphique ci-apr√®s permet de constater quelque soit la p√©riode et la maille temporelle choisie :
                la **variabilit√© des besoins** des R√©gions au fil du temps d'une part. Le phasage entre Consommation 
                 et Production au moyen des **√©changes inter-r√©gionnaux** d'autre part.
                    """)
        st.write("") 
        st.write("Vous pouvez utiliser les filtres ci-dessus pour explorer diff√©rentes p√©riodes et r√©gions.")

## ‚öôÔ∏è OUTIL DE FILTRAGE ####
        st.markdown('<div class="filtre-vert">', unsafe_allow_html=True)
        st.markdown("<hr style='border: 4px solid #4CAF50;'>", unsafe_allow_html=True)
        st.markdown('<h6 style="text-align: center; color: #4CAF50;">üîé Filtres d\'Analyse</h6>', unsafe_allow_html=True)
        
        col1, col2, col3 = st.columns(3)
        with col1:
            annee = st.selectbox("**Ann√©e** ('None' pour tout le dataset')", options=sorted(df_cons_preprocessed['DH'].dt.year.unique(), 
            reverse=True) + [None], index=sorted(df_cons_preprocessed['DH'].dt.year.unique(), reverse=True).index(2022)  # 2022 par d√©faut
            )
        with col2:
            if annee:
                mois = st.selectbox("**Mois** ('None' pour toute l'ann√©e)",
                options=sorted(df_cons_preprocessed[df_cons_preprocessed['DH'].dt.year == annee]['DH'].dt.month.unique()) + [None],index=0
                )
            else:
                mois = None
        with col3:
            frequence_resample = st.radio("**Fr√©quence** (√©chantillonnage)", options=['Heure', 'Jour', 'Semaine', 'Mois'],index=1  # 'Jour' par d√©faut
            )

        regions_preselectionnees = ['Occitanie', 'Auvergne-Rh√¥ne-Alpes', 'Bretagne', 'Pays de la Loire']
        regions = sorted(df_cons_preprocessed['R√©gion'].unique())

        regions_selected = st.multiselect("R√©gions √† comparer (4 maximum)", options=regions,default=regions_preselectionnees
        )
        st.markdown("<hr style='border: 4px solid #4CAF50;'>", unsafe_allow_html=True)

## ‚öôÔ∏è GRAPHIQUE INTERACTIF  ####       
        fig = Explo_Viz.create_regional_plots(df_cons_preprocessed, annee, mois, None, frequence_resample, regions_selected)
        st.pyplot(fig)
        plt.close(fig)

#################################
# ‚öôÔ∏è DATAVIZ CORRELATIONS  ‚öôÔ∏è#
#################################
    elif page == pages[2]:
        st.header("Saisonnalit√© et Consommation")
        
        st.write("""Ce graphique suivant montre l‚Äô√©volution mensuelle de la consommation d‚Äô√©nergie entre 2013 et 2023. Au-del√† du lien entre le mois de l'ann√©e et le niveeau de consommation, 
                 on observe une chute marqu√©e en 2020 (ligne grise), li√©e √† la crise du Covid-19 et ses confinements. 
        En 2022 (ligne cyan), la consommation reste globalement plus basse, traduisant l‚Äôeffet des tensions √©nerg√©tiques caus√©es par la guerre en Ukraine et les efforts de sobri√©t√©""")
        
        df_st2 = Explo_Viz.compute_df_st2(df_energie)
        fig_boxplot = Explo_Viz.create_annual_plot(df_st2)
        st.pyplot(fig_boxplot)
        plt.close(fig_boxplot)
        st.write("")
        st.write("### Temp√©rature et Consommation")
        st.write("""Le graphique ci-apr√®s combine des 'boxplots' de **consommation √©lectrique (MW)** et un 'scatter plot' de **temp√©rature moyenne (¬∞C)**,
                 le tout group√© par mois sur l‚Äôenti√®ret√© de la p√©riode √©tudi√©e. Il permet d'√©mettre l'hypoth√®se d'une influence significative de la temp√©rature sur la consommation √©lectrique au niveau mensuel, 
                 tout en visualisant la distribution et la variabilit√© de ces deux variables cl√©s au fil de l'ann√©e :"""
        )

        fig_boxplot = Explo_Viz.create_boxplot(df_energie, df_temp)  # Appel de la fonction
        st.pyplot(fig_boxplot)  # Affichage du graphique dans Streamlit
        plt.close(fig_boxplot)  # Fermeture pour √©viter les conflits de rendu

        st.write(" - **Saisonnalit√© de la Consommation** : Les boxplots de consommation r√©v√®lent une forte saisonnalit√©. " \
        "La consommation est g√©n√©ralement plus √©lev√©e en hiver, avec des m√©dianes et des √©tendues interquartiles significativement plus hautes.")
        st.write("")
        st.write(" - **Corr√©lation Inverse Apparente** : En juxtaposant les deux types de donn√©es, on peut observer une corr√©lation inverse suggestive " \
        "entre la temp√©rature moyenne et la consommation √©lectrique.")

        st.write("""Pour v√©rifier cette hypoth√®se de correlation, ci-apr√®s le r√©sultat d'un test statistique  """
        )



        st.write("### Plage Horaire et Consommation")
        st.write("")
        st.write(""" La variabilit√© horaire est particuli√®rement marqu√©e en hiver, tandis qu‚Äôelle reste plus stable en √©t√©, comme l‚Äôindiquent les amplitudes des boxplots.
                 La forte structuration des courbes selon l‚Äôheure sugg√®re une corr√©lation claire entre consommation √©lectrique et rythme quotidien d‚Äôactivit√©."""
                 )

        fig_boxplot, df_st3 = Explo_Viz.create_boxplot_season(df_energie)  # Appel de la fonction
        st.pyplot(fig_boxplot)  # Affichage du graphique dans Streamlit
        plt.close(fig_boxplot)  # Fermeture pour √©viter les conflits de rendu


        corr_results, df_st3 = Explo_Viz.Test_corr(df_st3)

        st.write("#### R√©sultats des tests de corr√©lation entre Plage Horaire et Consommation")
        st.write(" Les hypoth√®ses :")
        st.write(" H0 : Il n'y a pas d'influence de la plage horaire sur la consommation")
        st.write("H1 : Il y a une influence significative de la plage horaire sur la consommation")
        
        st.write(f"- Corr√©lation de Spearman : {corr_results['spearman_corr']:.3f} (p-value = {corr_results['spearman_p']:.3e})")
        st.write(f"- Corr√©lation de Pearson : {corr_results['pearson_corr']:.3f} (p-value = {corr_results['pearson_p']:.3e})")
        st.write("le facteur ‚ÄúPlage_Horaire‚Äù a un effet significatif sur la consommation,\n car la p-valeur est inf√©rieure √† 0.05")
        st.write(""" Mais ces tests ne captent pas n√©cessairement toute la structure r√©elle du ph√©nom√®ne (comme la nature cyclique des heures)."""
                 )

#################################
# ‚öôÔ∏è     MODELISATIONS        ‚öôÔ∏è#
#################################

    elif page == pages[3]:
        st.header("Mod√©lisation")


        st.write('#### Classification du probl√®me')

        st.write("");st.write("") 

        st.write(""" Type de probl√®me et t√¢che de machine learning
                Notre projet s‚Äôapparente √† de la **pr√©diction de valeurs continues dans une suite temporelle** pr√©sentant plusieurs saisonnalit√©s.
                 L'objectif est d'anticiper la demande en √©nergie en fonction du temps, des conditions m√©t√©orologiques et d'autres facteurs exog√®nes.\n\n"""
                )
        st.write('#### Choix des m√©triques de performance')
              
        st.markdown("""La m√©trique **MAPE (Mean Absolute Percentage Error)** est notre m√©trique principale car elle est facilement interpr√©table et comparable avec d‚Äôautres mod√®les.
                 Nous cherchons d‚Äôune part √† p√©naliser les grandes erreurs compte tenu de l‚Äôenjeu de pr√©diction de consommation au plus juste (**RMSE** faible), 
                 tout en pouvant comparer facilement nos diff√©rents mod√®les sur la base de % de variation (MAPE). Enfin, la qualit√© globale du mod√®le doit aussi √™tre √©lev√©e pour tenir compte de mani√®re √©quilibr√©e des sp√©cificit√©s r√©gionales (**Score R2**). 
                    Pour couvrir l‚Äôensemble des KPI pertinents sur ce probl√®me de r√©gression nous allons donc r√©cup√©rer chacun des indicateurs type: 

                    - Erreurs absolues et relatives (**MAE, MAPE**)
                    - Erreurs quadratiques (**MSE, RMSE**)
                    - Qualit√© d‚Äôajustement (**R¬≤ Score**)""")
            
        st.write("### Lien vers la page Notion d√©di√©e a la construction d'un dataset de temp√©ratures futures ")
        notion_url = "https://www.notion.so/Projet-Energie-Temp-ratures-Futures-1c1725f38aa58043b463e07b4a6d21fa?pvs=4"
        st.markdown(f"Vous pouvez consulter notre page Notion en cliquant sur ce lien : [Page Notion]({notion_url})")        

if __name__ == "__main__":
    main()