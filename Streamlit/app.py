import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
#import Explo_Viz 
from utils import Explo_Viz

# #########################
# ‚öôÔ∏è LOAD & PREPROCESS ‚öôÔ∏è #
##########################

@st.cache_data  
def load_and_preprocess_data():
    """Charge et pr√©traite les donn√©es une seule fois."""
    df_cons = pd.read_csv("../DataSet/eco2mix-regional-cons-def.csv", sep=';')
    df_cons_preprocessed = Explo_Viz.preprocess_data(df_cons)
    return df_cons_preprocessed

def main():
    st.title("Pr√©diction de Consommation Electrique en France")
    st.sidebar.title("Etapes du Projet")
    pages = ["Contexte du Projet", "Exploration", "DataVizualization", "Mod√©lisation"]
    page = st.sidebar.radio("Aller vers", pages)
    st.sidebar.title("Simulateur")
    st.sidebar.page_link("pages/simulateur.py", label="üìä Pr√©diction R√©gionnale Conso Future")
    df_cons_preprocessed = load_and_preprocess_data()  # Charger les donn√©es pr√©trait√©es
    

    if page == pages[0]: 
        st.write("### Contexte")
        st.write(""" Contexte : L‚Äôad√©quation entre la production et la consommation d‚Äô√©lectricit√© est au c≈ìur des pr√©occupations d‚Äôun acteur de l‚Äô√©nergie comme EDF. 
                 EDF, en tant que producteur et commercialisateur d‚Äô√©lectricit√© est en effet un responsable d‚Äô√©quilibre vis-√†-vis de RTE. 
                 Cela signifie qu‚Äôil se doit d‚Äôassurer √† tout instant un √©quilibre entre sa production et la consommation de ses clients, sous peine de p√©nalit√©s. 
                 Pour se faire, construire un mod√®le de pr√©vision de la consommation de ses clients est une activit√© essentielle au bon fonctionnement de EDF.""") 
        st.write('Objectif : Constater le phasage entre la consommation et la production √©nerg√©tique au niveau national et au niveau r√©gional '
        'Analyse au niveau r√©gional pour en d√©duire une pr√©vision de consommation au niveau national et au niveau r√©gional (risque de black out notamment)')
    
    elif page == pages[1]:
        st.write("### Exploration")
        st.dataframe(df_cons_preprocessed.head(10))  # Utiliser le dataframe pr√©trait√©
        st.write(df_cons_preprocessed.shape)
        st.dataframe(df_cons_preprocessed.describe())
        st.markdown("[Cliquez ici pour en savoir plus sur les actions de datacleaning](https://www.notion.so/Projet-Data-ENERGIE-PRE-PROCESSING-Fusion-Eco2mix-2-fichiers-18c725f38aa58062b1d7f79dc035f834?pvs=4)")
        

    elif page == pages[2]:
        st.header("Phasage entre consommation et production"
        )

        st.write ("""En plus de ne pas avoir le m√™me mix energ√©tique, les r√©gions sont dans une situation de disparit√© de leurs capacit√©s de production pour couvrir leurs besoins.
                  (cf. infra.)""")

#################################
# ‚öôÔ∏è AFFICHAGES DES GRAPHS    ‚öôÔ∏è#
#################################

        fig2 = Explo_Viz.create_barplot(df_cons_preprocessed)
        fig2.text(0.5, -0.15, "Certaines r√©gions sont largement d√©ficitaires en terme de phasage entre leur production et leurs besoin. Cf. Couverture 100%", ha='center', va='top', fontsize=12)
        st.pyplot(fig2)
        plt.close(fig2)
        
        st.write("");st.write("") 
        st.write(""" Pour r√©soudre cela avec l'aides des op√©rateurs d'√©nergie, les r√©gions proc√®dent toute l'ann√©e √† des *√©changes*.
                Le graphique ci-apr√®s permet de constater quelque soit la p√©riode et la maille temporelle choisie :
                la **variabilit√© des besoins** des R√©gions au fil du temps d'une part. Le phasage entre Consommation 
                 et Production au moyen des **√©changes inter-r√©gionnaux** d'autre part.
""")

## ‚öôÔ∏è FILTRAGES CONSOS / REGIONS ####
        st.markdown("<hr style='border: 2px solid #4CAF50;'>", unsafe_allow_html=True)
        st.markdown('<h6 style="text-align: center; color: #4CAF50;">üîé Filtres d\'Analyse</h6>', unsafe_allow_html=True)
        
        col1, col2, col3 = st.columns(3)
        with col1:
            annee = st.selectbox("**Ann√©e** ('None' pour tout le dataset')", options=sorted(df_cons_preprocessed['DH'].dt.year.unique(), 
            reverse=True) + [None], index=sorted(df_cons_preprocessed['DH'].dt.year.unique(), reverse=True).index(2022)  # 2022 par d√©faut
            )
        with col2:
            if annee:
                mois = st.selectbox("**Mois** ('None' pour toute l'ann√©e)",
                options=sorted(df_cons_preprocessed[df_cons_preprocessed['DH'].dt.year == annee]['DH'].dt.month.unique()) + [None],index=0
                )
            else:
                mois = None
        with col3:
            frequence_resample = st.radio("**Fr√©quence** (√©chantillonnage)", options=['Heure', 'Jour', 'Semaine', 'Mois'],index=1  # 'Jour' par d√©faut
            )

        regions_preselectionnees = ['Occitanie', 'Auvergne-Rh√¥ne-Alpes', 'Bretagne', 'Pays de la Loire']
        regions = sorted(df_cons_preprocessed['R√©gion'].unique())

        regions_selected = st.multiselect("R√©gions √† comparer (4 maximum)", options=regions,default=regions_preselectionnees
        )
        st.markdown("<hr style='border: 2px solid #4CAF50;'>", unsafe_allow_html=True)
#################################
        st.write("Ce graphique montre l'√©volution de la consommation et de la production d'√©nergie par r√©gion.")
        st.write("Vous pouvez utiliser les filtres ci-dessus pour explorer diff√©rentes p√©riodes et r√©gions.")
        
        fig = Explo_Viz.create_regional_plots(df_cons_preprocessed, annee, mois, None, frequence_resample, regions_selected)
        st.pyplot(fig)
        plt.close(fig)

        
        st.header("Evolution de la consommation, influences exog√®nes")
                  

    elif page == pages[3]:
        st.write("### Mod√©lisation")

if __name__ == "__main__":
    main()